[{"path":[]},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look GitHub build status making changes. README contain badges continuous integration services used package. recommend tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note terrainr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"see-ropensci-contributing-guide","dir":"","previous_headings":"","what":"See rOpenSci contributing guide","title":"CONTRIBUTING","text":"details.","code":""},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"discussion-forum","dir":"","previous_headings":"","what":"Discussion forum","title":"CONTRIBUTING","text":"Check discussion forum question, use case, otherwise bug feature request software . think issue requires longer form discussion.","code":""},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://docs.ropensci.org/terrainr/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://docs.ropensci.org/terrainr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Mike Mahoney Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/terrainr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Mahoney. Author, maintainer. Mike Johnson. Reviewer.            Mike reviewed package (v. 0.2.1) rOpenSci, see <https://github.com/ropensci/software-review/issues/416> Sydney Foks. Reviewer.            Sydney reviewed package (v. 0.2.1) rOpenSci, see <https://github.com/ropensci/software-review/issues/416>","code":""},{"path":"https://docs.ropensci.org/terrainr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mahoney M. J., Beier C. M., Ackerman, . C. (2022). terrainr: R package creating immersive virtual environments. Journal Open Source Software, 7(69), 4060, https://doi.org/10.21105/joss.04060","code":"@Article{,   year = {2022},   publisher = {The Open Journal},   volume = {7},   number = {69},   pages = {4060},   author = {Michael J. Mahoney and Colin M. Beier and Aidan C. Ackerman},   title = {{terrainr}: An R package for creating immersive virtual environments},   journal = {Journal of Open Source Software},   doi = {10.21105/joss.04060},   url = {https://doi.org/10.21105/joss.04060}, }"},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Landscape Visualizations in R and Unity","text":"terrainr makes easy retrieve elevation base map image tiles areas interest within United States National Map family APIs, process data larger, joined images crop tiles can imported Unity 3D rendering engine. three main utilities provided terrainr. First, users able download data National Map via get_tiles function, downloading data tiles area represented sf Raster object: downloaded, images standard GeoTIFF PNG formats can used expected utilities:   Finally, terrainr helps visualize data, natively R via new geom_spatial_rgb geom:  well Unity 3D rendering engine, allowing fly walk downloaded data sets 3D VR: can import tiles Unity (following Import Vignette) create:  time intensive processing steps can monitored via progressr package, ’ll confident computer still churning along just stalled . information, check introductory vignette guide importing data Unity!","code":"library(terrainr) library(sf)  location_of_interest <- tmaptools::geocode_OSM(\"Hyampom California\")$coords  location_of_interest <- data.frame(   x = location_of_interest[[\"x\"]],   y = location_of_interest[[\"y\"]] )  location_of_interest <- st_as_sf(   location_of_interest,    coords = c(\"x\", \"y\"),    crs = 4326 )  location_of_interest <- set_bbox_side_length(location_of_interest, 8000)  output_tiles <- get_tiles(location_of_interest,                           services = c(\"elevation\", \"ortho\"),                           resolution = 30 # pixel side length in meters                           ) raster::plot(raster::raster(output_tiles[[\"elevation\"]][[1]])) raster::plotRGB(raster::brick(output_tiles[[\"ortho\"]][[1]]), scale = 1) library(ggplot2) ggplot() +    geom_spatial_rgb(data = output_tiles[[\"ortho\"]],                    aes(x = x, y = y, r = red, g = green, b = blue)) +    coord_sf(crs = 4326) +    theme_void() with_progress( # When not specifying resolution, default is 1m pixels   output_tiles <- get_tiles(location_of_interest,                             services = c(\"elevation\", \"ortho\")) )  merged_dem <- merge_rasters(output_tiles[[\"elevation\"]],                              tempfile(fileext = \".tif\")) merged_ortho <- merge_rasters(output_tiles[[\"ortho\"]],                                tempfile(fileext = \".tif\"))  make_manifest(output_tiles$elevation,               output_tiles$ortho)"},{"path":"https://docs.ropensci.org/terrainr/index.html","id":"citing-terrainr","dir":"","previous_headings":"","what":"Citing terrainr","title":"Landscape Visualizations in R and Unity","text":"United States Geological Survey provides guidelines citing USGS data products (downloaded get_tiles) https://www.usgs.gov/faqs/---cite-datasets--services-national-map . cite terrainr publications please use: Mahoney, M. J., Beier, C. M., Ackerman, . C., (2022). terrainr: R package creating immersive virtual environments. Journal Open Source Software, 7(69), 4060, https://doi.org/10.21105/joss.04060 BibTeX entry LaTeX users :","code":"@Article{,     year = {2022},     publisher = {The Open Journal},     volume = {7},     number = {69},     pages = {4060},     author = {Michael J. Mahoney and Colin M. Beier and Aidan C. Ackerman},     title = {{terrainr}: An R package for creating immersive virtual environments},     journal = {Journal of Open Source Software},     doi = {10.21105/joss.04060},     url = {https://doi.org/10.21105/joss.04060},   }"},{"path":"https://docs.ropensci.org/terrainr/index.html","id":"available-datasets","dir":"","previous_headings":"","what":"Available Datasets","title":"Landscape Visualizations in R and Unity","text":"following datasets can currently downloaded using get_tiles hit_national_map_api: 3DEPElevation: USGS 3D Elevation Program (3DEP) Bare Earth DEM. USGSNAIPPlus: National Agriculture Imagery Program (NAIP) high resolution orthoimagery (HRO). nhd: comprehensive set digital spatial data encodes information naturally occurring constructed bodies surface water (lakes, ponds, reservoirs), paths water flows (canals, ditches, streams, rivers), related entities point features (springs, wells, stream gauges, dams). govunits: Major civil areas Nation, including States Territories, counties (equivalents), Federal Native American areas, congressional districts, minor civil divisions, incorporated places (cities towns), unincorporated places. contours: USGS Elevation Contours service. geonames: Information physical cultural geographic features, geographic areas, locational entities generally recognizable locatable name. NHDPlus_HR: comprehensive set digital spatial data comprising nationally seamless network stream reaches, elevation-based catchment areas, flow surfaces, value-added attributes. structures: name, function, location, core information characteristics selected manmade facilities. transportation: Roads, railroads, trails, airports, features associated transport people commerce. wbd: Hydrologic Unit (HU) polygon boundaries United States, Puerto Rico, U.S. Virgin Islands. (descriptions taken National Map API descriptions.) Note sometimes resources go offline, reasons unrelated anything package. can see current status resources link.","code":""},{"path":"https://docs.ropensci.org/terrainr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Landscape Visualizations in R and Unity","text":"can install terrainr CRAN via: , want newest patches features, can install development version terrainr GitHub : aware development version stable, features haven’t published CRAN may change time!","code":"install.packages(\"terrainr\") # install.packages(\"devtools\") devtools::install_github(\"ropensci/terrainr\")"},{"path":"https://docs.ropensci.org/terrainr/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Landscape Visualizations in R and Unity","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/addbuff.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a uniform buffer around a bounding box for geographic coordinates — addbuff","title":"Add a uniform buffer around a bounding box for geographic coordinates — addbuff","text":"add_bbox_buffer calculates great circle distance corners bounding box centroid extends set distance. Due using Haversine/great circle distance, latitude/longitude calculations exact. set_bbox_side_length thin wrapper around add_bbox_buffer sets sides bounding box (approximately) specified length. functions intended used geographic coordinate systems (data using longitude latitude position). projected coordinate systems, sane approach use sf::st_buffer add buffer, combine sf::st_centroid buffer set specific side length.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/addbuff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a uniform buffer around a bounding box for geographic coordinates — addbuff","text":"","code":"add_bbox_buffer(data, distance, distance_unit = \"meters\", error_crs = NULL)  # S3 method for sf add_bbox_buffer(data, distance, distance_unit = \"meters\", error_crs = NULL)  # S3 method for Raster add_bbox_buffer(data, distance, distance_unit = \"meters\", error_crs = NULL)  # S3 method for SpatRaster add_bbox_buffer(data, distance, distance_unit = \"meters\", error_crs = NULL)  set_bbox_side_length(   data,   distance,   distance_unit = \"meters\",   error_crs = NULL )  # S3 method for sf set_bbox_side_length(   data,   distance,   distance_unit = \"meters\",   error_crs = NULL )  # S3 method for Raster set_bbox_side_length(   data,   distance,   distance_unit = \"meters\",   error_crs = NULL )  # S3 method for SpatRaster set_bbox_side_length(   data,   distance,   distance_unit = \"meters\",   error_crs = NULL )"},{"path":"https://docs.ropensci.org/terrainr/reference/addbuff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a uniform buffer around a bounding box for geographic coordinates — addbuff","text":"data original data add buffer around. Must either sf SpatRaster object. distance distance add set side lengths equal . distance_unit units distance add buffer, passed units::as_units. error_crs Logical: function error data CRS? TRUE, function errors; FALSE, function quietly assumes EPSG:4326. NULL, default, function assumes EPSG:4326 warning.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/addbuff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a uniform buffer around a bounding box for geographic coordinates — addbuff","text":"sfc object (sf::st_as_sfc).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/addbuff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a uniform buffer around a bounding box for geographic coordinates — addbuff","text":"","code":"df <- data.frame(   lat = c(44.04905, 44.17609),   lng = c(-74.01188, -73.83493) )  df_sf <- sf::st_as_sf(df, coords = c(\"lng\", \"lat\")) df_sf <- sf::st_set_crs(df_sf, 4326)  add_bbox_buffer(df_sf, 10) #> Geometry set for 1 feature  #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -74.01197 ymin: 44.04899 xmax: -73.83484 ymax: 44.17615 #> Geodetic CRS:  WGS 84 #> POLYGON ((-74.01197 44.04899, -73.83484 44.0489...  df <- data.frame(   lat = c(44.04905, 44.17609),   lng = c(-74.01188, -73.83493) )  df_sf <- sf::st_as_sf(df, coords = c(\"lng\", \"lat\")) df_sf <- sf::st_set_crs(df_sf, 4326)  set_bbox_side_length(df_sf, 4000) #> Geometry set for 1 feature  #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -73.94855 ymin: 44.09461 xmax: -73.89844 ymax: 44.13059 #> Geodetic CRS:  WGS 84 #> POLYGON ((-73.94855 44.09461, -73.89844 44.0946..."},{"path":"https://docs.ropensci.org/terrainr/reference/calc_haversine_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract latitude and longitude from a provided object — calc_haversine_distance","title":"Extract latitude and longitude from a provided object — calc_haversine_distance","text":"internal utility function convert bounding boxes coordinate pairs.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/calc_haversine_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract latitude and longitude from a provided object — calc_haversine_distance","text":"","code":"calc_haversine_distance(point_1, point_2)"},{"path":"https://docs.ropensci.org/terrainr/reference/calc_haversine_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract latitude and longitude from a provided object — calc_haversine_distance","text":"point_1, point_2 Coordinate pairs (length-2 numeric vectors names \"lat\" \"lng\") calculate distance .","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/calc_haversine_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract latitude and longitude from a provided object — calc_haversine_distance","text":"vector length 1 containing distance points","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/combine_overlays.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple image overlays into a single file — combine_overlays","title":"Combine multiple image overlays into a single file — combine_overlays","text":"function combines number images single file, may processed image transformed image overlay.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/combine_overlays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple image overlays into a single file — combine_overlays","text":"","code":"combine_overlays(   ...,   output_file = tempfile(fileext = \".png\"),   transparency = 0 )"},{"path":"https://docs.ropensci.org/terrainr/reference/combine_overlays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple image overlays into a single file — combine_overlays","text":"... File paths images combined. Note combining TIFF images requires tiff package installed. output_file path save resulting image . Can format accepted magick::image_read. Optionally, can set NULL, case function return image magick object instead writing disk. transparency value indicating much transparency added image. less 1, interpreted proportion (value 0.1 results image becoming 10% transparent); 1 100, interpreted percentage (value 10 results image becoming 10% transparent.) value 0 equivalent additional transparency.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/combine_overlays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple image overlays into a single file — combine_overlays","text":"output_file null, output_file, invisibly. output_file null, magick image object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/combine_overlays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple image overlays into a single file — combine_overlays","text":"","code":"if (FALSE) { # Generate points and download orthoimagery mt_elbert_points <- data.frame(   lat = runif(100, min = 39.11144, max = 39.12416),   lng = runif(100, min = -106.4534, max = -106.437) )  mt_elbert_sf <- sf::st_as_sf(mt_elbert_points, coords = c(\"lng\", \"lat\")) sf::st_crs(mt_elbert_sf) <- sf::st_crs(4326)  output_files <- get_tiles(   mt_elbert_sf,   output_prefix = tempfile(),   services = c(\"ortho\") )  # Merge orthoimagery into a single file ortho_merged <- merge_rasters(   input_rasters = output_files[1],   output_raster = tempfile(fileext = \".tif\") )  # Convert our points into an overlay mt_elbert_overlay <- vector_to_overlay(mt_elbert_sf,   ortho_merged[[1]],   size = 15,   color = \"red\",   na.rm = TRUE )  # Combine the overlay with our orthoimage ortho_with_points <- combine_overlays(   ortho_merged[[1]],   mt_elbert_overlay ) }"},{"path":"https://docs.ropensci.org/terrainr/reference/deg_to_rad.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert decimal degrees to radians — deg_to_rad","title":"Convert decimal degrees to radians — deg_to_rad","text":"Convert decimal degrees radians","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/deg_to_rad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert decimal degrees to radians — deg_to_rad","text":"","code":"deg_to_rad(deg)"},{"path":"https://docs.ropensci.org/terrainr/reference/deg_to_rad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert decimal degrees to radians — deg_to_rad","text":"deg vector values, decimal degrees, convert radians","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/deg_to_rad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert decimal degrees to radians — deg_to_rad","text":"vector length radians","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/geom_spatial_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot RGB rasters in ggplot2 — geom_spatial_rgb","title":"Plot RGB rasters in ggplot2 — geom_spatial_rgb","text":"geom_spatial_rgb stat_spatial_rgb allow users plot three-band RGB rasters ggplot2, using layers background base maps spatial plotting. Note unlike ggplot2::geom_sf, function force ggplot2::coord_sf; accurate mapping, add ggplot2::coord_sf crs value matching input raster layer.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/geom_spatial_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot RGB rasters in ggplot2 — geom_spatial_rgb","text":"","code":"geom_spatial_rgb(   mapping = NULL,   data = NULL,   stat = \"spatialRGB\",   position = \"identity\",   ...,   hjust = 0.5,   vjust = 0.5,   interpolate = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   scale = NULL )  stat_spatial_rgb(   mapping = NULL,   data = NULL,   geom = \"raster\",   position = \"identity\",   na.rm = FALSE,   show.legend = FALSE,   inherit.aes = TRUE,   scale = NULL,   ... )"},{"path":"https://docs.ropensci.org/terrainr/reference/geom_spatial_rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot RGB rasters in ggplot2 — geom_spatial_rgb","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. addition three options described ggplot2::geom_raster, two additional methods: SpatRaster object (see terra::rast), function coerce raster data frame assume raster bands RGB order (allowing , ignoring, fourth alpha band). length-1 character vector, function attempt load object via terra::rast. stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. hjust, vjust horizontal vertical justification grob.  justification value number 0 1.  Defaults 0.5 , centering pixel data location. interpolate TRUE interpolate linearly, FALSE (default) interpolate. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). scale Integer. Maximum (possible) value three channels. NULL, attempts infer proper values data -- RGB values <= 1 1, <= 255 255, otherwise 65535. geom geometric object use display data, either ggproto Geom subclass string naming geom stripped geom_ prefix (e.g. \"point\" rather \"geom_point\")","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/geom_spatial_rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot RGB rasters in ggplot2 — geom_spatial_rgb","text":"","code":"if (FALSE) {  simulated_data <- data.frame(   id = seq(1, 100, 1),   lat = runif(100, 44.04905, 44.17609),   lng = runif(100, -74.01188, -73.83493) )  simulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\")) simulated_data <- sf::st_set_crs(simulated_data, 4326)  output_tiles <- get_tiles(simulated_data,   services = c(\"ortho\"),   resolution = 120 )  merged_ortho <- tempfile(fileext = \".tif\") merge_rasters(output_tiles[[\"ortho\"]], merged_ortho)  merged_stack <- terra::rast(merged_ortho)  library(ggplot2)  ggplot() +   geom_spatial_rgb(     data = merged_ortho,     mapping = aes(       x = x,       y = y,       r = red,       g = green,       b = blue     )   ) +   geom_sf(data = simulated_data) +   coord_sf(crs = 4326)  ggplot() +   geom_spatial_rgb(     data = merged_stack,     mapping = aes(       x = x,       y = y,       r = red,       g = green,       b = blue     )   ) +   geom_sf(data = simulated_data) +   coord_sf(crs = 4326) }"},{"path":"https://docs.ropensci.org/terrainr/reference/georeference_overlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Georeference image overlays based on a reference raster — georeference_overlay","title":"Georeference image overlays based on a reference raster — georeference_overlay","text":"function georeferences image overlay based reference raster, setting extent CRS image raster file. georeference multiple images merge single file, see merge_rasters.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/georeference_overlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Georeference image overlays based on a reference raster — georeference_overlay","text":"","code":"georeference_overlay(   overlay_file,   reference_raster,   output_file = tempfile(fileext = \".tif\") )"},{"path":"https://docs.ropensci.org/terrainr/reference/georeference_overlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Georeference image overlays based on a reference raster — georeference_overlay","text":"overlay_file image overlay georeference. File format detected automatically file extension; options include jpeg/jpg, png, tif/tiff. reference_raster raster file base georeferencing . output image extent CRS reference raster. Accepts anything can read terra::rast output_file path write georeferenced image file . Must TIFF.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/georeference_overlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Georeference image overlays based on a reference raster — georeference_overlay","text":"file path written , invisibly.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/georeference_overlay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Georeference image overlays based on a reference raster — georeference_overlay","text":"","code":"if (FALSE) { simulated_data <- data.frame(   id = seq(1, 100, 1),   lat = runif(100, 44.1114, 44.1123),   lng = runif(100, -73.92273, -73.92147) )  simulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\"))  downloaded_tiles <- get_tiles(simulated_data,   services = c(\"elevation\", \"ortho\"),   georeference = FALSE )  georeference_overlay(   overlay_file = downloaded_tiles[[2]],   reference_raster = downloaded_tiles[[1]],   output_file = tempfile(fileext = \".tif\") ) }"},{"path":"https://docs.ropensci.org/terrainr/reference/get_centroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the great-circle centroid for latitude/longitude data — get_centroid","title":"Get the great-circle centroid for latitude/longitude data — get_centroid","text":"Get great-circle centroid latitude/longitude data","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/get_centroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the great-circle centroid for latitude/longitude data — get_centroid","text":"","code":"get_centroid(lat, lng)"},{"path":"https://docs.ropensci.org/terrainr/reference/get_centroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the great-circle centroid for latitude/longitude data — get_centroid","text":"lat vector latitudes degrees. lng vector longitudes degrees.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/get_centroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the great-circle centroid for latitude/longitude data — get_centroid","text":"latitude/longitude","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/get_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","title":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","text":"function splits area contained within bounding box set tiles, retrieves data USGS National map tile. version 0.5.0, method lists deprecated.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/get_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","text":"","code":"get_tiles(   data,   output_prefix = tempfile(),   side_length = NULL,   resolution = 1,   services = \"elevation\",   verbose = FALSE,   georeference = TRUE,   projected = NULL,   ... )  # S3 method for sf get_tiles(   data,   output_prefix = tempfile(),   side_length = NULL,   resolution = 1,   services = \"elevation\",   verbose = FALSE,   georeference = TRUE,   projected = NULL,   ... )  # S3 method for sfc get_tiles(   data,   output_prefix = tempfile(),   side_length = NULL,   resolution = 1,   services = \"elevation\",   verbose = FALSE,   georeference = TRUE,   projected = NULL,   ... )  # S3 method for Raster get_tiles(   data,   output_prefix = tempfile(),   side_length = NULL,   resolution = 1,   services = \"elevation\",   verbose = FALSE,   georeference = TRUE,   projected = NULL,   ... )  # S3 method for SpatRaster get_tiles(   data,   output_prefix = tempfile(),   side_length = NULL,   resolution = 1,   services = \"elevation\",   verbose = FALSE,   georeference = TRUE,   projected = NULL,   ... )  # S3 method for list get_tiles(   data,   output_prefix = tempfile(),   side_length = NULL,   resolution = 1,   services = \"elevation\",   verbose = FALSE,   georeference = TRUE,   projected = NULL,   ... )"},{"path":"https://docs.ropensci.org/terrainr/reference/get_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","text":"data sf SpatRaster object; tiles downloaded full extent provided object. output_prefix file prefix use saving tiles. side_length length, meters, side tiles download. NULL, defaults maximum side length permitted least permissive service requested. resolution many meters represented pixel? default value 1 means 1 pixel = 1 meter, value 2 means 1 pixel = 2 meters, . services character vector services download data . Current options include \"3DEPElevation\", \"USGSNAIPPlus\", \"nhd\". Users can also use short codes download specific type data without specifying source; current options short codes include \"elevation\" (equivalent \"3DEPElevation\"), \"ortho\" (equivalent \"USGSNAIPPlus), \"hydro\" (\"nhd\"). Short codes guaranteed refer source across releases. Short codes converted service name duplicates removed, given source queried per tile. verbose Logical: tile retrieval functions run verbose mode? georeference Logical: tiles downloaded PNGs without georeferencing, downloaded georeferenced TIFF files? option nothing elevation data downloaded. projected Logical: data projected coordinate reference system? NULL, default, inferred sf::st_is_longlat. ... Additional arguments passed hit_national_map_api. can used change default query parameters additional options National Map services. See details.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/get_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","text":"list length number unique services requested, containing named vectors data files saved . Returned invisibly.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/get_tiles.html","id":"available-datasources","dir":"Reference","previous_headings":"","what":"Available Datasources","title":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","text":"following services currently available (short codes parentheses applicable). See links API documentation. 3DEPElevation (short code: elevation) USGSNAIPPlus (short code: ortho) USGSNAIPImagery nhd (short code: hydro) govunits contours geonames NHDPlus_HR structures transportation wbd (\"short code\": watersheds) ecosystems USGSTopo USGSShadedReliefOnly USGSImageryOnly USGSHydroCached USGSTNMBlank","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/get_tiles.html","id":"additional-arguments","dir":"Reference","previous_headings":"","what":"Additional Arguments","title":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","text":"... argument can used pass additional arguments National Map API edit hard-coded defaults used function. information common arguments change can found hit_national_map_api. Note ... can also used change formats returned server, using function likely cause function error (corrupt output data). download files different formats, use hit_national_map_api.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/get_tiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A user-friendly way to get USGS National Map data tiles for an area — get_tiles","text":"","code":"if (FALSE) { simulated_data <- data.frame(   id = seq(1, 100, 1),   lat = runif(100, 44.04905, 44.17609),   lng = runif(100, -74.01188, -73.83493) )  simulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\"))  get_tiles(simulated_data, tempfile()) }"},{"path":"https://docs.ropensci.org/terrainr/reference/hit_national_map_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Hit the USGS 3DEP API and retrieve an elevation heightmap — hit_national_map_api","title":"Hit the USGS 3DEP API and retrieve an elevation heightmap — hit_national_map_api","text":"function retrieves single tile data single National Map service returns raw response. End users recommended use get_tiles instead, much validation provides friendly interface. description datasets provided National Map, see https://apps.nationalmap.gov/services","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/hit_national_map_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hit the USGS 3DEP API and retrieve an elevation heightmap — hit_national_map_api","text":"","code":"hit_national_map_api(   bbox,   img_width,   img_height,   service,   verbose = FALSE,   ... )"},{"path":"https://docs.ropensci.org/terrainr/reference/hit_national_map_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hit the USGS 3DEP API and retrieve an elevation heightmap — hit_national_map_api","text":"bbox object sf::st_bbox. img_width number pixels x direction retrieve img_height number pixels y direction retrieve service string indicating service API use. full list available services, see get_tiles. Short codes accepted function. verbose Logical: Print number tries required pull tile? Default FALSE. ... Additional arguments passed National Map API. can used change default query parameters additional options National Map services. See information.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/hit_national_map_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hit the USGS 3DEP API and retrieve an elevation heightmap — hit_national_map_api","text":"raw vector.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/hit_national_map_api.html","id":"additional-arguments","dir":"Reference","previous_headings":"","what":"Additional Arguments","title":"Hit the USGS 3DEP API and retrieve an elevation heightmap — hit_national_map_api","text":"... argument can used pass additional arguments National Map API edit hard-coded defaults used function. useful options can changed include: bboxSR: spatial reference bounding box given function. specified, assumed 4326. imageSR: spatial reference image downloaded. specified, assumed 4326. layers: data layers download. National Map API returns data without specifying layers, argument used default. National Map requires argument, default value 0. format: image format downloaded. Defaults depend service used set compatible get_tiles. Pass arguments hit_national_map_api like argument substitute new values. Note ... values never validated used; passing invalid parameters ... cause data retrieval fail.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/hit_national_map_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hit the USGS 3DEP API and retrieve an elevation heightmap — hit_national_map_api","text":"","code":"if (FALSE) { hit_national_map_api(   bbox = list(     c(lat = 44.10438, lng = -74.01231),     c(lat = 44.17633, lng = -73.91224)   ),   img_width = 8000,   img_height = 8000,   service = \"3DEPElevation\" ) }"},{"path":"https://docs.ropensci.org/terrainr/reference/make_unity.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize terrain inside of a Unity project. — make_unity","title":"Initialize terrain inside of a Unity project. — make_unity","text":"Initialize terrain inside Unity project.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/make_unity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize terrain inside of a Unity project. — make_unity","text":"","code":"make_unity(   project,   heightmap,   overlay = NULL,   side_length = 4097,   scene_name = \"terrainr_scene\",   action = TRUE,   unity = find_unity() )"},{"path":"https://docs.ropensci.org/terrainr/reference/make_unity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize terrain inside of a Unity project. — make_unity","text":"project directory path Unity project create terrain inside. heightmap file path raster transform terrain. overlay Optionally, file path image overlay layer top terrain surface. Leave NULL overlay. side_length side length, map units, terrain tiles. Must equal 2^x + 1, x 5 12. scene_name name Unity scene create terrain . action Boolean: Execute unifir \"script\" create Unity project? FALSE, returns non-executed script. unity location Unity executable create projects . default, auto-detected unifir::find_unity","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/make_unity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize terrain inside of a Unity project. — make_unity","text":"object class \"unifir_script\", containing either executed unifir script (action = TRUE) non-executed script object (action = FALSE).","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/make_unity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize terrain inside of a Unity project. — make_unity","text":"","code":"if (FALSE) { if (!isTRUE(as.logical(Sys.getenv(\"CI\")))) {   simulated_data <- data.frame(     id = seq(1, 100, 1),     lat = runif(100, 44.04905, 44.17609),     lng = runif(100, -74.01188, -73.83493)   )   simulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\"))   output_files <- get_tiles(simulated_data)   temptiff <- tempfile(fileext = \".tif\")   merge_rasters(output_files[\"elevation\"][[1]], temptiff)   make_unity(file.path(tempdir(), \"unity\"), temptiff) } }"},{"path":"https://docs.ropensci.org/terrainr/reference/merge_rasters.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge multiple raster files into a single raster — merge_rasters","title":"Merge multiple raster files into a single raster — merge_rasters","text":"functions like get_tiles return multiple separate files can useful single larger raster instead. function thin wrapper sf::gdal_utils, making easy collapse multiple raster files single TIFF.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/merge_rasters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge multiple raster files into a single raster — merge_rasters","text":"","code":"merge_rasters(   input_rasters,   output_raster = tempfile(fileext = \".tif\"),   options = character(0),   overwrite = FALSE,   force_fallback = FALSE )"},{"path":"https://docs.ropensci.org/terrainr/reference/merge_rasters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge multiple raster files into a single raster — merge_rasters","text":"input_rasters character vector containing file paths georeferenced rasters want use. output_raster file path save merged georeferenced raster . options Optionally, character vector options passed directly sf::gdal_utils. fallback used options (\"-overwrite\") specified, issue warning. overwrite Logical: overwrite output_raster exists? FALSE file exists, function fail error. behavior argument TRUE \"-overwrite\" passed options directly stable. force_fallback Logical: TRUE, uses much slower fallback method default. used testing purposes recommended use end users.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/merge_rasters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge multiple raster files into a single raster — merge_rasters","text":"output_raster, invisibly.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/merge_rasters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge multiple raster files into a single raster — merge_rasters","text":"","code":"if (FALSE) { simulated_data <- data.frame(   lat = c(44.10379, 44.17573),   lng = c(-74.01177, -73.91171) )  simulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\"))  img_files <- get_tiles(simulated_data) merge_rasters(img_files[[1]]) }"},{"path":"https://docs.ropensci.org/terrainr/reference/point_from_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Find latitude and longitude for a certain distance and azimuth from a point. — point_from_distance","title":"Find latitude and longitude for a certain distance and azimuth from a point. — point_from_distance","text":"Find latitude longitude certain distance azimuth point.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/point_from_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find latitude and longitude for a certain distance and azimuth from a point. — point_from_distance","text":"","code":"point_from_distance(   coord_pair,   distance,   azimuth,   distance_unit = \"meters\",   azimuth_unit = c(\"degrees\", \"radians\") )"},{"path":"https://docs.ropensci.org/terrainr/reference/point_from_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find latitude and longitude for a certain distance and azimuth from a point. — point_from_distance","text":"coord_pair numeric vector length 2 names \"lat\" \"lng\" distance distance (meters) representing distance away original point apply azimuth azimuth (units specified azimuth_unit) representing direction apply distance original point distance_unit string passed convert_distance indicating units provided distance. azimuth_unit string (either degrees radians) indicating units azimuth argument","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/point_from_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find latitude and longitude for a certain distance and azimuth from a point. — point_from_distance","text":"object class terrainr_coordinate_pair.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/rad_to_deg.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert radians to degrees — rad_to_deg","title":"Convert radians to degrees — rad_to_deg","text":"Convert radians degrees","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/rad_to_deg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert radians to degrees — rad_to_deg","text":"","code":"rad_to_deg(rad)"},{"path":"https://docs.ropensci.org/terrainr/reference/rad_to_deg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert radians to degrees — rad_to_deg","text":"rad vector values, radians, convert decimal degrees","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/rad_to_deg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert radians to degrees — rad_to_deg","text":"vector length decimal degrees","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/raster_to_raw_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop a raster and convert the output tiles into new formats. — raster_to_raw_tiles","title":"Crop a raster and convert the output tiles into new formats. — raster_to_raw_tiles","text":"function deprecated terrainr 0.5.0 favor new function, make_manifest. continued exported least 2022, improvements bug fixes made new function. Please open issue features relied upon missing new function!","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/raster_to_raw_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop a raster and convert the output tiles into new formats. — raster_to_raw_tiles","text":"","code":"raster_to_raw_tiles(input_file, output_prefix, side_length = 4097, raw = TRUE)"},{"path":"https://docs.ropensci.org/terrainr/reference/raster_to_raw_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop a raster and convert the output tiles into new formats. — raster_to_raw_tiles","text":"input_file File path input TIFF file convert. output_prefix file path prefix output tiles . side_length side length, pixels, .raw tiles. raw Logical: Convert cropped tiles .raw? FALSE returns .png.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/raster_to_raw_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop a raster and convert the output tiles into new formats. — raster_to_raw_tiles","text":"Invisibly, character vector containing file paths written .","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/raster_to_raw_tiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Crop a raster and convert the output tiles into new formats. — raster_to_raw_tiles","text":"function crops input raster files smaller square tiles converts either .png .raw files ready imported Unity game engine.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/raster_to_raw_tiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop a raster and convert the output tiles into new formats. — raster_to_raw_tiles","text":"","code":"if (FALSE) { if (!isTRUE(as.logical(Sys.getenv(\"CI\")))) {   simulated_data <- data.frame(     id = seq(1, 100, 1),     lat = runif(100, 44.04905, 44.17609),     lng = runif(100, -74.01188, -73.83493)   )   simulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\"))   output_files <- get_tiles(simulated_data)   temptiff <- tempfile(fileext = \".tif\")   merge_rasters(output_files[\"elevation\"][[1]], temptiff)   raster_to_raw_tiles(temptiff, tempfile()) } }"},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"terrainr: Landscape Visualizations in R and 'Unity' — terrainr-package","title":"terrainr: Landscape Visualizations in R and 'Unity' — terrainr-package","text":"Functions retrieval, manipulation, visualization 'geospatial' data, aim towards producing '3D' landscape visualizations 'Unity' '3D' rendering engine. Functions also provided retrieving elevation data base map tiles 'USGS' National Map https://apps.nationalmap.gov/services/.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"terrainr: Landscape Visualizations in R and 'Unity' — terrainr-package","text":"Maintainer: Michael Mahoney mike.mahoney.218@gmail.com (ORCID) contributors: Mike Johnson (Mike reviewed package (v. 0.2.1) rOpenSci, see <https://github.com/ropensci/software-review/issues/416>) [reviewer] Sydney Foks (Sydney reviewed package (v. 0.2.1) rOpenSci, see <https://github.com/ropensci/software-review/issues/416>) [reviewer]","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_bounding_box-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for bounding boxes in the format expected by terrainr\nfunctions. — terrainr_bounding_box-class","title":"S4 class for bounding boxes in the format expected by terrainr\nfunctions. — terrainr_bounding_box-class","text":"S4 class bounding boxes format expected terrainr functions.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_bounding_box-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for bounding boxes in the format expected by terrainr\nfunctions. — terrainr_bounding_box-class","text":"bl terrainr_coordinate_pair representing bottom left corner bounding box tr terrainr_coordinate_pair representing top right corner bounding box","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_bounding_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a terrainr_bounding_box object — terrainr_bounding_box","title":"Construct a terrainr_bounding_box object — terrainr_bounding_box","text":"order simplify code, terrainr functions expect set S4 class representation coordinate pairs bounding boxes. provided data expected S4 format, functions used cast data target class.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_bounding_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a terrainr_bounding_box object — terrainr_bounding_box","text":"","code":"terrainr_bounding_box(bl, tr, coord_units = \"degrees\")"},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_bounding_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a terrainr_bounding_box object — terrainr_bounding_box","text":"bl, tr bottom left (bl) top right (tr) corners bounding box, either terrainr_coordinate_pair object coordinate pair. coordinate pair named, assumed (lat, lng) format; named, function attempt properly identify coordinates. coord_units Arguments passed terrainr_coordinate_pair. bl tr already terrainr_coordinate_pair objects, arguments used.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_bounding_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a terrainr_bounding_box object — terrainr_bounding_box","text":"object class terrainr_bounding_box.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_coordinate_pair-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for coordinate points in the format expected by\nterrainr functions. — terrainr_coordinate_pair-class","title":"S4 class for coordinate points in the format expected by\nterrainr functions. — terrainr_coordinate_pair-class","text":"S4 class coordinate points format expected terrainr functions.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_coordinate_pair-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for coordinate points in the format expected by\nterrainr functions. — terrainr_coordinate_pair-class","text":"lat Numeric latitude, decimal degrees lng Numeric longitude, decimal degrees","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_coordinate_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a terrainr_coordinate_pair object. — terrainr_coordinate_pair","title":"Construct a terrainr_coordinate_pair object. — terrainr_coordinate_pair","text":"order simplify code, terrainr functions expect set S4 class representation coordinate pairs bounding boxes. provided data expected S4 format, functions used cast data target class.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_coordinate_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a terrainr_coordinate_pair object. — terrainr_coordinate_pair","text":"","code":"terrainr_coordinate_pair(coords, coord_units = c(\"degrees\", \"radians\"))"},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_coordinate_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a terrainr_coordinate_pair object. — terrainr_coordinate_pair","text":"coords vector length 2 containing latitude longitude. unnamed, coordinates assumed (latitude, longitude) format; named, function attempt figure value represents coordinate. Currently function understands \"lat\", \"latitude\", \"y\" names latitude \"lng\", \"long\", \"longitude\", \"x\" longitude. coord_units String indicating whether coordinates degrees radians. Degrees stored radians converted degrees.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/terrainr_coordinate_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a terrainr_coordinate_pair object. — terrainr_coordinate_pair","text":"terrainr_coordinate_pair object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/unity_crops.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform rasters and write manifest file for import into Unity — make_manifest","title":"Transform rasters and write manifest file for import into Unity — make_manifest","text":"functions crop input raster files smaller square tiles converts either .png .raw files ready imported Unity game engine. make_manifest also writes \"manifest\" file importer script may used automatically import tiles Unity.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/unity_crops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform rasters and write manifest file for import into Unity — make_manifest","text":"","code":"make_manifest(   heightmap,   overlay = NULL,   output_prefix = \"import\",   manifest_path = \"terrainr.manifest\",   importer_path = \"import_terrain.cs\" )  transform_elevation(heightmap, side_length = 4097, output_prefix = \"import\")  transform_overlay(overlay, side_length = 4097, output_prefix = \"import\")"},{"path":"https://docs.ropensci.org/terrainr/reference/unity_crops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform rasters and write manifest file for import into Unity — make_manifest","text":"heightmap File path heightmap transform. overlay File path image overlay transform. Optional make_manifest. output_prefix file path prefix output tiles . manifest_path File path write manifest file . importer_path File name write importer script . Set NULL copy importer script. overwrite file path. side_length Side length, pixels, output tile. raster dimensions evenly divisible side_length, tiles generated overhanging pieces set 0 units elevation RGB 0 (pure black). Side lengths equal 2^x + 1 (x <= 12) cause warning, tiles must size import Unity.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/unity_crops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform rasters and write manifest file for import into Unity — make_manifest","text":"manifest_path, invisibly.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/unity_crops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform rasters and write manifest file for import into Unity — make_manifest","text":"","code":"if (FALSE) { if (!isTRUE(as.logical(Sys.getenv(\"CI\")))) {   simulated_data <- data.frame(     id = seq(1, 100, 1),     lat = runif(100, 44.04905, 44.17609),     lng = runif(100, -74.01188, -73.83493)   )   simulated_data <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\"))   output_files <- get_tiles(simulated_data)   temptiff <- tempfile(fileext = \".tif\")   merge_rasters(output_files[\"elevation\"][[1]], temptiff)   make_manifest(temptiff, output_prefix = tempfile(), importer_path = NULL) } }"},{"path":"https://docs.ropensci.org/terrainr/reference/vector_to_overlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn spatial vector data into an image overlay — vector_to_overlay","title":"Turn spatial vector data into an image overlay — vector_to_overlay","text":"function allows users quickly transform vector data image overlay, may imported texture Unity.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/vector_to_overlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn spatial vector data into an image overlay — vector_to_overlay","text":"","code":"vector_to_overlay(   vector_data,   reference_raster,   output_file = NULL,   transparent = \"#ffffff\",   ...,   error_crs = NULL )"},{"path":"https://docs.ropensci.org/terrainr/reference/vector_to_overlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn spatial vector data into an image overlay — vector_to_overlay","text":"vector_data spatial vector data set transformed overlay image. Users may provide either sf object length 1 character vector containing path file readable sf::read_sf. reference_raster raster file produce overlay . output overlay extent resolution input raster. Users may provide either Raster* object length 1 character vector containing path file readable terra::rast. output_file path save image overlay . NULL, saves tempfile. transparent hex code color made transparent final image. Set FALSE set colors transparent. ... Arguments passed ... either ggplot2::geom_point (point vector data), ggplot2::geom_line (line data), ggplot2::geom_polygon (data types). error_crs Logical: function error data CRS? TRUE, function errors; FALSE, function quietly assumes EPSG:4326. NULL, default, function assumes EPSG:4326 warning.","code":""},{"path":"https://docs.ropensci.org/terrainr/reference/vector_to_overlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn spatial vector data into an image overlay — vector_to_overlay","text":"output_file, invisibly.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/reference/vector_to_overlay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn spatial vector data into an image overlay — vector_to_overlay","text":"","code":"if (FALSE) {  # Generate points to download raster tiles for set.seed(123) simulated_data <- data.frame(   id = seq(1, 100, 1),   lat = runif(100, 44.1114, 44.1123),   lng = runif(100, -73.92273, -73.92147) )  # Create an sf object from our original simulated data  simulated_data_sf <- sf::st_as_sf(simulated_data, coords = c(\"lng\", \"lat\")) sf::st_crs(simulated_data_sf) <- sf::st_crs(4326)  # Download data!  downloaded_tiles <- get_tiles(simulated_data_sf, tempfile())  merged_file <- merge_rasters(   downloaded_tiles[[1]],   tempfile(fileext = \".tif\") )   # Create an overlay image vector_to_overlay(simulated_data_sf, merged_file[[1]], na.rm = TRUE) }"},{"path":[]},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-075","dir":"Changelog","previous_headings":"","what":"terrainr 0.7.5","title":"terrainr 0.7.5","text":"CRAN release: 2023-10-04 tests flagged skip CRAN, run offline georeference_overlay give fewer useless warnings","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-074","dir":"Changelog","previous_headings":"","what":"terrainr 0.7.4","title":"terrainr 0.7.4","text":"CRAN release: 2023-02-16 New query method dramatically faster less-error prone.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-073","dir":"Changelog","previous_headings":"","what":"terrainr 0.7.3","title":"terrainr 0.7.3","text":"CRAN release: 2023-02-01 Updated contours URL new location Removing dependencies raster rgdal Fixed infinite loop following two-stage APIs Removed HRO, endpoint appears disappeared","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-072","dir":"Changelog","previous_headings":"","what":"terrainr 0.7.2","title":"terrainr 0.7.2","text":"CRAN release: 2022-12-07 Two new endpoints available: HRO, provides orthoimagery non-CONUS US domains, USGSNAIPImagery, returns NAIP (whereas USGSNAIPPlus, default ortho, use HRO appropriate). Updated NAIP URL new home, reenable NAIP downloads. Fixed warning geom_spatial_rgb() “dropped aesthetics”. Fixed govunits test. ggplot2 now requires minimum 3.4.0","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-071","dir":"Changelog","previous_headings":"","what":"terrainr 0.7.1","title":"terrainr 0.7.1","text":"CRAN release: 2022-08-11 Redocumented package stay CRAN. merge_rasters longer warns options aren’t respected using fallback method immediately passing said options gdalwarp. Starting move error messages rlang string interpolation via glue. rlang glue added Imports raster now requires minimum version 3.5-19.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-070","dir":"Changelog","previous_headings":"","what":"terrainr 0.7.0","title":"terrainr 0.7.0","text":"CRAN release: 2022-05-05 make_unity new function uses new unifir package automatically create Unity scenes, clicking necessary. Internally, calls functions {raster} replaced calls {terra}. future-proofs package coming deprecations takes advantage newer, faster terra code. intended breaking change; methods previously took {raster} objects still work (silently convert {terra} hood). workflows impacted change, please file bug report! make_manifest, transform_elevation, transform_overlay longer error providing non-standard side lengths; now warn intended. make_manifest, transform_elevation, transform_overlay longer give warnings nodata values cases. clamped 0. Fixed documentation, unused objects, restyled removed lints. transform_overlay (extension, every Unity overlay importer) now tries automatically guess scale input raster. Values 1 scaled 0-1, integers 255 scaled 0-255, integers 65535 scaled 0-65536. main effect realistic coloring importing terrain. Floats 1 won’t affected. terra now included Import (recursively imported raster previously). raster rgdal now Suggests (used temporarily Raster* methods get_tiles add_bbox_buffer, new version raster hits CRAN). raster_to_raw_tiles now thin wrapper around functions transform_overlay transform_elevation. longer tested; removed entirely next release (see deprecation notice terrainr 0.5.0).","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-061","dir":"Changelog","previous_headings":"","what":"terrainr 0.6.1","title":"terrainr 0.6.1","text":"CRAN release: 2022-02-10 README version 0.6.0 disclaimer top stating package experimental build relying --yet unreleased packages. true. release removes language. Otherwise, release identical version 0.6.0.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-060","dir":"Changelog","previous_headings":"","what":"terrainr 0.6.0","title":"terrainr 0.6.0","text":"CRAN release: 2022-02-04 Two new functions, transform_elevation transform_overlay, now provide raster transformation functions possible raster_to_raw_tiles make_manifest. added bonus, internal code handle tiling now dramatically simpler. make_manifest now overwrite file importer_path, line documented behavior. Previous versions never overwrite importer_path. merge_rasters’ fallback method now runs much faster gdalUtils removed dependencies following CRAN directions rgdal now explicit dependency (previously imported via gdalUtils)","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-051","dir":"Changelog","previous_headings":"","what":"terrainr 0.5.1","title":"terrainr 0.5.1","text":"CRAN release: 2022-01-04 new endpoint, ecosystems, added get_tiles hit_national_map_api. merge_rasters gains argument, overwrite, allows specify whether overwrite output_raster exists. Previous versions expected pass “-overwrite” options. file exists output_raster overwrite FALSE, merge_rasters throw error. sf now minimum dependency 1.0-5, take advantage upstream bug fix (relating merge_rasters overwrite)","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-050","dir":"Changelog","previous_headings":"","what":"terrainr 0.5.0.","title":"terrainr 0.5.0.","text":"CRAN release: 2021-08-05 new function, make_manifest, now helps automate import terrain imagery Unity. fully replaces raster_to_raw_tiles (see Deprecations ). Documentation updates forthcoming. raster_to_raw_tiles now deprecated removed future release (earlier 2022). Use make_manifest instead. method get_tiles.list now deprecated removed future release (unexported Fall 2021, removed earlier 2022). Convert list sf object instead. bbox argument hit_national_map_api now documented “object [sf::st_bbox].” change earlier options length 2 list terrainr_bounding_box object. methods currently still supported, undocumented; removed future release (earlier 2022). get_tiles longer mangles data projected coordinates (via fix internal function split_bbox). reason want old behavior back, set new argument projected FALSE providing projected data. documentation add_bbox_buffer set_bbox_side_length now specifies used geographic coordinate systems. use functions projected data, warn; may upgraded error future versions. README images now beautiful Hyampom, California, somewhat appealing vista original Mt Marcy scene. “Import Unity” vignette rewritten use make_manifest, overview vignette documentation. Typos message merge_rasters gives using fallback method fixed. merge_rasters gains argument force_fallback , TRUE, use older, slower method merging tiles. recommended, useful testing. slow removal terrainr_* custom classes marches ! classes longer present user-facing, non-deprecated code; functions still relying custom classes internal utilities split_bbox function responsible tiling get_tiles requests. split_bbox now run faster, particularly large tile sets, nested loops vectorized. Improvements test coverage CI.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-041","dir":"Changelog","previous_headings":"","what":"terrainr 0.4.1","title":"terrainr 0.4.1","text":"CRAN release: 2021-05-30 get_tiles now displays bulleted list endpoints (?), rather jumble raw markdown add_bbox_buffer properly sets CRS output attempting buffer geodesic coordinates. Typo fixes error message combine_overlays Added importFrom tag terrainr-package.R silence R CMD CHECK NOTE.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-040","dir":"Changelog","previous_headings":"","what":"terrainr 0.4.0","title":"terrainr 0.4.0","text":"CRAN release: 2021-04-23 new argument, error_crs, behaves just like error_crs add_bbox: NULL, function give warning assuming CRS; FALSE, function assume CRS silently, TRUE, function error vector_data missing CRS. target_crs removed. vector_data given CRS reference_raster doesn’t CRS, always projected CRS reference_raster. error_crs added mirror add_bbox_buffer: NULL input data CRS, vector_to_overlay warn assuming raster CRS. Set TRUE error FALSE ignore warning. NAIP imagery now downloaded transparent = \"false\" minimize number times backup method merge_rasters (see ) called. restore old behavior, set transparent = \"true\" either get_tiles hit_national_map_api. get_tiles now infer bboxSR imageSR provided sf Raster objects otherwise specified. restore old behavior, set bboxSR imageSR 4326 get_tiles (set data’s CRS 4326 calling get_tiles). merge_rasters can handle merging mixed-band rasters (NAIP images without alpha bands). moment using older, slower implementation raise warning. (#30, #32). Removed code check ggplot2 vector_to_overlay now ggplot2 required calc_haversine_distance (exported) now assumes ’s provided degrees. coord_units removed argument. get_tiles.terrainr_bounding_box removed; longer possible users terrainr_bounding_box objects unless using non-exported functionality.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-031","dir":"Changelog","previous_headings":"","what":"terrainr 0.3.1","title":"terrainr 0.3.1","text":"CRAN release: 2021-02-23 First CRAN submission! smallest patch releases, almost user-facing changes. Added rOpenSci reviewers DESCRIPTION. Changed USGS API link new website. Added rOpenSci badge README. Changed PNG images slightly smaller JPGs. Edited URLs new rOpenSci website. Moved lifecycle badge href new site. small spelling issues fixed. Added tags non-exported point_to_distance terrainr_bounding_box functions Added single quotes around Unity DESCRIPTION","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-030","dir":"Changelog","previous_headings":"","what":"terrainr 0.3.0","title":"terrainr 0.3.0","text":"terrainr_* classes effectively removed longer exported. Functions previously expected objects now generally accept sf Raster class objects instead. Functions previously returned objects now generally return sf objects instead (#24). list returned get_tiles now uses service names provided user, endpoint names. means get_tiles(..., services = \"elevation\") now use name elevation instead 3DEPElevation, remain standard across versions (#12). get_bbox get_coordinate_bbox removed. Functions used expect terrainr_bounding_box objects now accept objects class sf raster (#24). add_bbox_buffer loses divisible argument. precise control side length, use set_bbox_side_length (accurate, slightly conservative, divisible system ever ) (#17). convert_distance removed (internally replaced units package) (#7). merge_rasters loses input_images output_image function, downloaded files now already georeferenced. recreate functionality, georeference image tiles directly via output <- georeference_overlay(img_tiles, ref_tiles, tempfile(fileext = \".tif\")) provide output merge_rasters. calc_haversine_distance point_from_distance rad_to_deg deg_to_rad Two new functions, geom_spatial_rgb stat_spatial_rgb, allow use RGB map tiles backgrounds plotting. calc_haversine_distance gains argument coord_units allowing handle coordinates radians well degrees. georeference_overlay provides tempfile(fileext = \".tif\") default output location output_file provided. get_tiles now tells tiles ’s retrieving, retriving. calc_haversine_distance internally simplified somewhat reduce code duplication. hit_national_map_api auto-detects whether API endpoints returning base64 binary handles appropriately get_tiles now auto-detects whether hit_national_map_api returning base64 binary writes file appropriately. hit_national_map_api now likely fail human-friendly error message API endpoints return non-200 status (54ad9fb). hit_national_map_api (extension get_tiles) now register user agent. gdalUtilities removed, functionality replaced sf. rlang removed, functionality removed. units added. ggplot2 moved Imports (previously Suggests) due new geom_spatial_rgb stat_spatial_rgb functions.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-021","dir":"Changelog","previous_headings":"","what":"terrainr 0.2.1","title":"terrainr 0.2.1","text":"transportation endpoint moved servers, now handled function handles DEMs orthoimages main branch terrainr now main Tests run schedule Monday/Wednesday/Friday mornings, alert endpoint changes Restyled code","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-020","dir":"Changelog","previous_headings":"","what":"terrainr 0.2.0","title":"terrainr 0.2.0","text":"merge_rasters loses argument merge_raster. “georeference single image” use case, see new georeference_overlay function. get_tiles gains argument resolution (details ) side_length services. functionality changed, code unnamed arguments services, verbose, georeference may impacted. vector_to_overlay lets users quickly produce image overlays vector data. georeference_overlay replaces use merge_raster creating single-file georeferenced overlay files. combine_overlays lets users, well, combine overlays single image get_tiles gains argument, resolution, specifying number meters pixel represent (higher images result smaller downloads). get_bbox provides S3 generic create terrainr_bounding_box objects. version, means users can use get_bbox get bounding boxes sf RasterLayer objects, means adding methods easier going forward. generic get_bbox method equivalent get_coord_bbox raster_to_raw_tiles handles rectangles appropriately get_tiles, raster_to_raw_tiles, merge_rasters now much conscientious deleting tempfiles ’re done . merge_rasters longer fails handed mix 3- 4-band raster files. current implementation cast 4 band rasters 3 band images return 3 band raster image. output_image argument merge_rasters now default value tempfile(fileext = \".tif\") little friendly users. Arguments lat lng get_bbox (get_coord_bbox) longer need quoted – either tidyverse-feeling NSE approach standard quoted argument approach work. terrainr-provided functions now explicitly use terrainr:: namespace. sf added explicit import due vector_to_overlay. sf required gdalUtilities, also imported package, change impact users. rlang added dependency allow lat lng unquoted get_bbox. ggplot2 added Suggests due vector_to_overlay. jpeg tiff added Suggests due georeference_overlay. ’d expect image libraries join list time.","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-010","dir":"Changelog","previous_headings":"","what":"terrainr 0.1.0","title":"terrainr 0.1.0","text":"set_bbox_side_length wraps add_bbox_buffer set side bounding box equal length (within ~1% accuracy) First version released GitHub","code":""},{"path":"https://docs.ropensci.org/terrainr/news/index.html","id":"terrainr-0009001","dir":"Changelog","previous_headings":"","what":"terrainr 0.0.0.9001","title":"terrainr 0.0.0.9001","text":"First development version Supports retrieval 3DEP NAIP data sources Supports export Unity-friendly format add_bbox_buffer calc_haversine_distance convert_distance deg_to_rad get_bbox_centroid get_coord_bbox point_from_distance rad_to_deg get_tiles hit_national_map_api merge_rasters raster_to_raw_tiles terrainr_bounding_box (class) terrainr_coordinate_pair (class) terrainr_bounding_box (creation utility) terrainr_coordinate_pair (creation utility) export_bounding_box export_coord_pair","code":""}]
